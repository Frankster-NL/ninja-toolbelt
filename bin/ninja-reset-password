#!/usr/bin/env node
"use strict"

"use strict"

var crypto = require('crypto')
var fs = require('fs')
var program = require('commander')

var error = require('../utils').error
var passwd = require('passwd')

var USER_NAME = 'ubuntu'
var REALM = 'ninja.admin'

program
  .description('Reset password used to log into block.')
  .option('--auth [file]', 'file to use for block HTTP auth', '/etc/opt/ninja/auth.htpasswd')
  .option('-u, --user [name]', 'username to change', 'ubuntu')
  .option('-r, --realm [realm]', 'realm for HTTP auth', 'ninjablock.admin')
  .parse(process.argv);

process.nextTick(function() {
  program.password("new password:", platforms[process.platform])
})

var platforms = {
  darwin: function(password) {
    commitHTTPAuth(password, done)
  },
  linux: function(password) {
    commitPasswd(password, function(err) {
      if (err) done(err)
      commitHTTPAuth(password, done)
    })
  }
}

function commitPasswd(password, cb) {
  cb = cb || done
  var msg = 'this will change the password for '+program.user+'.'
  program.confirm(msg + '\ncontinue?', function(ok) {
    if (!ok) process.exit(1)
    passwd.passwd(program.user, password, {}, function(code) {
      if (code !== 0) {
        return cb(new Error('failed changing password. ' + code))
      }
      cb()
    })
  })
}

function commitHTTPAuth(password, cb) {
  cb = cb || done
  var msg = 'this will overwrite the HTTP login for '+ program.user +' in '+program.auth+'.'
  program.confirm(msg + '\ncontinue?', function(ok) {
    if (!ok) return process.exit(1)
    console.log('writing', program.auth)
    fs.writeFile(program.auth, makeHttpAuth(password), function(err) {
      if (err) return cb(err)
      cb()
    })
  })
}

function done(err) {
  if (err) {
    console.log(err)
    process.exit(1)
  }
  process.exit()
}

/**
 * Magic HTTP Digest Auth
 */

function makeHttpAuth(password) {
  var str = program.user + ':' + program.realm + ':' + password
  var hash = crypto.createHash('MD5')
  hash.update(str)
  return program.user + ':' + program.realm + ':' + hash.digest('hex')
}
